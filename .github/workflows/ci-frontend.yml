name: Frontend CI Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'integration'
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize
      - reopened
      - edited
    paths:
      - '.github/workflows/ci-frontend.yml'
      - 'frontend/**'
      - '!frontend/*.md'

env:
  GITHUB_REPOSITORY: ${{ github.repository }}
  IMAGE_TAG_1: latest
jobs:
  build-and-test:
    if: github.base_ref == 'main' && github.head_ref == 'integration'
    name: Build & Test
    defaults:
      run:
        shell: bash
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' 

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      # - name: Lint code
      #   run: npm run lint | tee /dev/null

      - name: Build
        run: npm run build

  build-push-image:
    if: github.base_ref == 'main' && github.head_ref == 'integration'
    permissions:
      contents: read
      packages: write
    name: Build & Push Image
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tags as environment variables
        run: |
          echo "Github Repository: $GITHUB_REPOSITORY"
          REPO_NAME="${GITHUB_REPOSITORY#*/}" # Extract the repository name from the full repository name
          echo "REPO_NAME: $REPO_NAME"
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/${REPO_NAME}-frontend" >> $GITHUB_ENV
          echo "IMAGE_TAG_2=${{ github.run_number }}-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:frontend"
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_1 }}, ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_2 }}

  update-integration:
    if: github.base_ref == 'main' && github.head_ref == 'integration'
    permissions:
      contents: write
    name: Update Deployment File
    runs-on: ubuntu-latest
    needs: build-push-image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # For pull_request events, this fetches the head branch and checks it out.
          # Otherwise, it checks out the normal ref.
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          fetch-depth: 0 

      - name: Set environment variables
        
        run: |
          echo "Github Repository: $GITHUB_REPOSITORY"
          REPO_NAME="${GITHUB_REPOSITORY#*/}" # Extract the repository name from the full repository name
          echo "REPO_NAME: $REPO_NAME"
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/${REPO_NAME}-frontend" >> $GITHUB_ENV
          echo "IMAGE_TAG_2=${{ github.run_number }}-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Update Deployment YAML
        run: |
          sed -i "s|image: ${{ env.IMAGE_NAME }}:.*|image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_2 }}|" compose.yml

      - name: Set Git user email and name
        run: |
          GIT_ACTOR_EMAIL="${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          echo "Setting Git user.email to: $GIT_ACTOR_EMAIL"
          git config --global user.email "$GIT_ACTOR_EMAIL"
          git config --global user.name "${{ github.actor }}"
          echo "Git configuration set successfully."
      - name: Commit and Push Changes
        run: |
          BRANCH_NAME=""
          # Check if the event is a pull_request
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.head_ref }}"
            echo "Workflow triggered by a Pull Request. BRANCH_NAME set to head_ref: $BRANCH_NAME"
          else
            BRANCH_NAME="${{ github.ref_name }}"
            echo "Workflow not triggered by a Pull Request. BRANCH_NAME set to ref_name: $BRANCH_NAME"
          fi
          git switch $BRANCH_NAME
          git add compose.yml
          git commit -m "Update Docker Image Tag to ${{ env.IMAGE_TAG_2 }}"
          git pull --rebase origin $BRANCH_NAME
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



